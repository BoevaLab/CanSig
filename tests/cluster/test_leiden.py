import pytest  # pytype: disable=import-error
from sklearn import datasets  # pytype: disable=import-error

import cansig.cluster.leiden as le


def test_leiden_resolution_smoke() -> None:
    X, _ = datasets.make_blobs(n_samples=100, n_features=2)

    config = le.LeidenResolutionConfig()

    labels = le.LeidenResolution(config).fit_predict(X)
    assert labels.shape == (len(labels),)
    assert min(labels) == 0
    assert max(labels) > 0


@pytest.mark.parametrize("clusters", (3, 4, 5))
def test_leiden_n_clusters(clusters: int) -> None:
    # Three Gaussian clusters are generated by default. We will partition them
    # into smaller clusters, matching the specified argument.
    X, _ = datasets.make_blobs(n_samples=100, n_features=2)
    config = le.LeidenNClusterConfig(clusters=clusters)

    labels = le.LeidenNCluster(config).fit_predict(X)
    assert labels.shape == (len(labels),)
    assert min(labels) == 0
    assert max(labels) == clusters - 1
